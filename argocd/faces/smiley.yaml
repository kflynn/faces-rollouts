---
apiVersion: v1
kind: Service
metadata:
  name: smiley
  namespace: faces
spec:
  type: ClusterIP
  selector:
    service: smiley
  ports:
  - port: 80
    targetPort: http
---
apiVersion: v1
kind: Service
metadata:
  name: smiley-canary
  namespace: faces
spec:
  ports:
    - port: 80
      targetPort: http
  selector:
    service: smiley
---
apiVersion: v1
kind: Service
metadata:
  name: smiley-stable
  namespace: faces
spec:
  ports:
    - port: 80
      targetPort: http
  selector:
    service: smiley
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: smiley-route
  namespace: faces
spec:
  parentRefs:
    - name: smiley
      kind: Service
      group: ""
      port: 80
  rules:
    - backendRefs:
        - name: smiley-stable
          group: ""
          port: 80
          kind: Service
        - name: smiley-canary
          group: ""
          port: 80
          kind: Service
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: smiley-rollout
  namespace: faces
spec:
  replicas: 1
  strategy:
    canary:
      canaryService: smiley-canary
      stableService: smiley-stable
      trafficRouting:
        plugins:
          argoproj-labs/gatewayAPI:
            httpRoute: smiley-route # our created httproute
            namespace: faces
      steps:
        - setWeight: 30
        - pause: {}
        - setWeight: 40
        - pause: { duration: 15 }
        - setWeight: 60
        - pause: { duration: 15 }
        - setWeight: 80
        - pause: { duration: 15 }
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      service: smiley
  template:
    metadata:
      labels:
        service: smiley
    spec:
      containers:
      - name: smiley
        image: ghcr.io/buoyantio/faces-workload:1.5.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
        env:
        - name: FACES_SERVICE
          value: "smiley"
        # - name: ERROR_FRACTION
        #   value: "20"
        - name: DELAY_BUCKETS
          value: "0,5,10,15,20,50,200,500,750"
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 250m
            memory: 128Mi
